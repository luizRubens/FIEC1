/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.9
 * Generated at: 2014-09-25 19:51:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import sqlserver.EnqueteDAO;
import java.sql.SQLException;
import sqlserver.BDSQL;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.chart.ChartUtilities;
import java.io.FileOutputStream;
import java.io.OutputStream;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.*;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;

public final class grafico_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Geração de gráficos</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		DefaultCategoryDataset ds = new DefaultCategoryDataset();
			//	int[] v = { 10, 30, 15, 5 };//quantidade de votos que provem do banco de dados, esses daqui são apenas para testar

			/*	ds.addValue(v[0], "Votos", "Monica");
		ds.addValue(v[1], "Votos", "Fernando");
		ds.addValue(v[2], "Votos", "Daniel");
		ds.addValue(v[3], "Votos", "Outros");

		//cria grafico

		JFreeChart grafico = ChartFactory.createBarChart(
				"Resultado da Votação", "Canditados", "Quantidade", ds,
				PlotOrientation.VERTICAL, true, true, false);
		JFreeChart grafico2 = ChartFactory.createLineChart(
				"Resultado da Votação", "Canditados", "Quantidade", ds,
				PlotOrientation.VERTICAL, true, true, false);
		JFreeChart grafico3 = ChartFactory.createBarChart3D(
				"Resultado da Votação", "Canditados", "Quantidade", ds,
				PlotOrientation.VERTICAL, true, true, false);

		OutputStream arq = new FileOutputStream(
				"C:/Users/LuizR.Ribas/Desktop/FIEC/LPOO/grafico.png");
		OutputStream arq2 = new FileOutputStream(
				"C:/Users/LuizR.Ribas/Desktop/FIEC/LPOO/grafico1.png");
		OutputStream arq3 = new FileOutputStream(
				"C:/Users/LuizR.Ribas/Desktop/FIEC/LPOO/grafico2.png");

		ChartUtilities.writeChartAsPNG(arq, grafico, 300, 200);
		ChartUtilities.writeChartAsPNG(arq2, grafico2, 300, 200);
		ChartUtilities.writeChartAsPNG(arq3, grafico2, 300, 200);

		arq.close();
		arq2.close();
		arq3.close();

		out.print("<img src='c:/Users/LuizR.Ribas/Desktop/FIEC/LPOO/grafico.png'>'");
		out.print("<img src='c:/Users/LuizR.Ribas/Desktop/FIEC/LPOO/grafico1.png'>'");
		out.print("<img src='c:/Users/LuizR.Ribas/Desktop/FIEC/LPOO/grafico2.png'>'");

		//grafico de pizza feito a pedido do kleber

		DefaultPieDataset piz = new DefaultPieDataset();
		piz.setValue("Monica", v[0]);
		piz.setValue("Fernando", v[1]);
		piz.setValue("Daniel", v[2]);
		piz.setValue("Outros", v[3]);

		JFreeChart grafico4 = ChartFactory.createPieChart3D(
				"Resultado da Votação", piz);

		OutputStream arq4 = new FileOutputStream(
				"C:/Users/LuizR.Ribas/Desktop/FIEC/LPOO/grafico3.png");
		ChartUtilities.writeChartAsPNG(arq4, grafico4, 300, 200);
		out.print("<img src='c:/Users/LuizR.Ribas/Desktop/FIEC/LPOO/grafico3.png'>'");

		arq4.close();
			 */
			 
		int id = Integer.parseInt(request.getParameter("cand"));

		EnqueteDAO e = new EnqueteDAO();

		e.adicionarVoto(id);
		
			int m = 0;
			int f = 0;
			int d = 0;
			int o = 0;

			BDSQL bdsql = new BDSQL();

			String sql = "select * from enquete";

			try {
		bdsql.getConnection();
		bdsql.st = bdsql.con.prepareStatement(sql);
		bdsql.rs = bdsql.st.executeQuery();
		bdsql.rs.next();

		m = bdsql.rs.getInt("voto1");
		f = bdsql.rs.getInt("voto2");
		d = bdsql.rs.getInt("voto3");
		o = bdsql.rs.getInt("voto4");

		System.out.print(m);

		int v[];

		ds.addValue(m, "Votos", "Monica");
		ds.addValue(f, "Votos", "Fernando");
		ds.addValue(d, "Votos", "Daniel");
		ds.addValue(o, "Votos", "Outros");

		JFreeChart grafico5 = ChartFactory.createBarChart3D(
				"Resultado da Votação", "Canditados", "Quantidade", ds,
				PlotOrientation.VERTICAL, true, true, false);

		OutputStream arq5 = new FileOutputStream(
				"C:/Users/LuizR.Ribas/Desktop/FIEC/LPOO/grafico5.png");

		ChartUtilities.writeChartAsPNG(arq5, grafico5, 300, 200);

		arq5.close();

		out.print("<img src='c:/Users/LuizR.Ribas/Desktop/FIEC/LPOO/grafico5.png'>'");

			} catch (SQLException e2) {
		System.out.print(e2.toString());

			}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
